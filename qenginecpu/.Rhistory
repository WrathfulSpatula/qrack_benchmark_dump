Fuction for overall model p-value
lmp <- function (modelobject) {
if (class(modelobject) != "lm") stop("Not an object of class 'lm' ")
f <- summary(modelobject)$fstatistic
p <- pf(f[1],f[2],f[3],lower.tail=F)
attributes(p) <- NULL
return(p)
}
# Initialize
options(scipen=4, digits=3)
eqTable <- data.frame(MinQubit=integer(), Base=numeric(), Intercept=numeric(), RSqr=numeric(), BaseP=numeric(), InterceptP=numeric(), ModelP=numeric())
# Load data
testData <- t(read.csv(file="/home/iamu/qrack_benchmarks/qenginecpu/x.csv", header=TRUE, sep=","))
firstTrendPoint <- 10
firstTrendPoint <- 9
# Freely varied log base scaling:
modelY <- log(testData[2,firstTrendPoint:22])
modelX <- testData[1,firstTrendPoint:22]
exponential.model <- lm(modelY~modelX)
modelSummary<-summary(exponential.model)
modelSummary
firstTrendPoint <- 10
# Freely varied log base scaling:
modelY <- log(testData[2,firstTrendPoint:22])
modelX <- testData[1,firstTrendPoint:22]
exponential.model <- lm(modelY~modelX)
modelSummary<-summary(exponential.model)
modelSummary
firstTrendPoint <- 11
# Freely varied log base scaling:
modelY <- log(testData[2,firstTrendPoint:22])
modelX <- testData[1,firstTrendPoint:22]
exponential.model <- lm(modelY~modelX)
modelSummary<-summary(exponential.model)
modelSummary
firstTrendPoint <- 12
# Freely varied log base scaling:
modelY <- log(testData[2,firstTrendPoint:22])
modelX <- testData[1,firstTrendPoint:22]
exponential.model <- lm(modelY~modelX)
modelSummary<-summary(exponential.model)
modelSummary
coefs <- coef(exponential.model)
firstTrendPoint <- 13
# Freely varied log base scaling:
modelY <- log(testData[2,firstTrendPoint:22])
modelX <- testData[1,firstTrendPoint:22]
exponential.model <- lm(modelY~modelX)
modelSummary<-summary(exponential.model)
modelSummary
firstTrendPoint <- 14
# Freely varied log base scaling:
modelY <- log(testData[2,firstTrendPoint:22])
modelX <- testData[1,firstTrendPoint:22]
exponential.model <- lm(modelY~modelX)
modelSummary<-summary(exponential.model)
modelSummary
coefs <- coef(exponential.model)
qExpTrend <- exp(predict(exponential.model))
boxplot(testData[c(4,5,6,7,8),], log="y", names=testData[1,], main="X Time vs. No. of Qubits", xlab="No. of Qubits", ylab="Time (ms)")
lines(testData[1,firstTrendPoint:22] - testData[1,1] + 1, qExpTrend,lwd=2, col = "red", xlab = "No. of Qubits", ylab = "Time (ms)")
coords <- locator()
text(x=coords$x, y=coords$y, labels=paste('t â‰ˆ exp[', round(coefs[[2]], 2), '( n - ', -round(coefs[[1]] / coefs[[2]], 2), ')]'))
# Load data
testData <- t(read.csv(file="/home/iamu/qrack_benchmarks/qenginecpu/inc.csv", header=TRUE, sep=","))
firstTrendPoint <- 14
# Freely varied log base scaling:
modelY <- log(testData[2,firstTrendPoint:22])
modelX <- testData[1,firstTrendPoint:22]
exponential.model <- lm(modelY~modelX)
modelSummary<-summary(exponential.model)
modelSummary
coefs <- coef(exponential.model)
qExpTrend <- exp(predict(exponential.model))
boxplot(testData[c(4,5,6,7,8),], log="y", names=testData[1,], main="X Time vs. No. of Qubits", xlab="No. of Qubits", ylab="Time (ms)")
lines(testData[1,firstTrendPoint:22] - testData[1,1] + 1, qExpTrend,lwd=2, col = "red", xlab = "No. of Qubits", ylab = "Time (ms)")
eqTable <- data.frame(MinQubit=integer(), Base=numeric(), Intercept=numeric(), RSqr=numeric(), BaseP=numeric(), InterceptP=numeric(), ModelP=numeric())
# Load data
testData <- t(read.csv(file="/home/iamu/qrack_benchmarks/qenginecpu/inc.csv", header=TRUE, sep=","))
firstTrendPoint <- 14
# Freely varied log base scaling:
modelY <- log(testData[2,firstTrendPoint:22])
modelX <- testData[1,firstTrendPoint:22]
exponential.model <- lm(modelY~modelX)
modelSummary<-summary(exponential.model)
modelSummary
boxplot(testData[c(4,5,6,7,8),], log="y", names=testData[1,], ylim=c(0.01, 10) main="X Time vs. No. of Qubits", xlab="No. of Qubits", ylab="Time (ms)")
boxplot(testData[c(4,5,6,7,8),], log="y", names=testData[1,], ylim=c(0.01, 10), main="X Time vs. No. of Qubits", xlab="No. of Qubits", ylab="Time (ms)")
boxplot(testData[c(4,5,6,7,8),], log="y", names=testData[1,], ylim=c(0.01, 100), main="X Time vs. No. of Qubits", xlab="No. of Qubits", ylab="Time (ms)")
boxplot(testData[c(4,5,6,7,8),], log="y", names=testData[1,], ylim=c(0.01, 1000), main="X Time vs. No. of Qubits", xlab="No. of Qubits", ylab="Time (ms)")
firstTrendPoint <- 12
# Freely varied log base scaling:
modelY <- log(testData[2,firstTrendPoint:22])
modelX <- testData[1,firstTrendPoint:22]
exponential.model <- lm(modelY~modelX)
modelSummary<-summary(exponential.model)
modelSummary
coefs <- coef(exponential.model)
firstTrendPoint <- 9
# Freely varied log base scaling:
modelY <- log(testData[2,firstTrendPoint:22])
modelX <- testData[1,firstTrendPoint:22]
exponential.model <- lm(modelY~modelX)
modelSummary<-summary(exponential.model)
modelSummary
coefs <- coef(exponential.model)
qExpTrend <- exp(predict(exponential.model))
boxplot(testData[c(4,5,6,7,8),], log="y", names=testData[1,], main="X Time vs. No. of Qubits", xlab="No. of Qubits", ylab="Time (ms)")
lines(testData[1,firstTrendPoint:22] - testData[1,1] + 1, qExpTrend,lwd=2, col = "red", xlab = "No. of Qubits", ylab = "Time (ms)")
boxplot(testData[c(4,5,6,7,8),], log="y", ylim=c(0.01, 1000), names=testData[1,], main="X Time vs. No. of Qubits", xlab="No. of Qubits", ylab="Time (ms)")
boxplot(testData[c(4,5,6,7,8),], log="y", ylim=c(0.001, 1000), names=testData[1,], main="X Time vs. No. of Qubits", xlab="No. of Qubits", ylab="Time (ms)")
lines(testData[1,firstTrendPoint:22] - testData[1,1] + 1, qExpTrend,lwd=2, col = "red", xlab = "No. of Qubits", ylab = "Time (ms)")
# Load data
testData <- t(read.csv(file="/home/iamu/qrack_benchmarks/qenginecpu/incs.csv", header=TRUE, sep=","))
firstTrendPoint <- 9
# Freely varied log base scaling:
modelY <- log(testData[2,firstTrendPoint:22])
modelX <- testData[1,firstTrendPoint:22]
exponential.model <- lm(modelY~modelX)
modelSummary<-summary(exponential.model)
modelSummary
coefs <- coef(exponential.model)
qExpTrend <- exp(predict(exponential.model))
boxplot(testData[c(4,5,6,7,8),], log="y", ylim=c(0.001, 1000), names=testData[1,], main="X Time vs. No. of Qubits", xlab="No. of Qubits", ylab="Time (ms)")
lines(testData[1,firstTrendPoint:22] - testData[1,1] + 1, qExpTrend,lwd=2, col = "red", xlab = "No. of Qubits", ylab = "Time (ms)")
# Load data
testData <- t(read.csv(file="/home/iamu/qrack_benchmarks/qenginecpu/incc.csv", header=TRUE, sep=","))
firstTrendPoint <- 9
# Freely varied log base scaling:
modelY <- log(testData[2,firstTrendPoint:22])
modelX <- testData[1,firstTrendPoint:22]
exponential.model <- lm(modelY~modelX)
modelSummary<-summary(exponential.model)
modelSummary
coefs <- coef(exponential.model)
boxplot(testData[c(4,5,6,7,8),], log="y", ylim=c(0.001, 1000), names=testData[1,], main="X Time vs. No. of Qubits", xlab="No. of Qubits", ylab="Time (ms)")
lines(testData[1,firstTrendPoint:22] - testData[1,1] + 1, qExpTrend,lwd=2, col = "red", xlab = "No. of Qubits", ylab = "Time (ms)")
# Load data
testData <- t(read.csv(file="/home/iamu/qrack_benchmarks/qenginecpu/incsc.csv", header=TRUE, sep=","))
firstTrendPoint <- 9
# Freely varied log base scaling:
modelY <- log(testData[2,firstTrendPoint:22])
modelX <- testData[1,firstTrendPoint:22]
exponential.model <- lm(modelY~modelX)
modelSummary<-summary(exponential.model)
modelSummary
coefs <- coef(exponential.model)
qExpTrend <- exp(predict(exponential.model))
boxplot(testData[c(4,5,6,7,8),], log="y", ylim=c(0.001, 1000), names=testData[1,], main="X Time vs. No. of Qubits", xlab="No. of Qubits", ylab="Time (ms)")
lines(testData[1,firstTrendPoint:22] - testData[1,1] + 1, qExpTrend,lwd=2, col = "red", xlab = "No. of Qubits", ylab = "Time (ms)")
# Initialize
options(scipen=4, digits=3)
# Load data
testData <- t(read.csv(file="/home/iamu/qrack_benchmarks/qengineocl/inc.csv", header=TRUE, sep=","))
firstTrendPoint <- 9
# Freely varied log base scaling:
modelY <- log(testData[2,firstTrendPoint:22])
modelX <- testData[1,firstTrendPoint:22]
exponential.model <- lm(modelY~modelX)
modelSummary<-summary(exponential.model)
modelSummary
coefs <- coef(exponential.model)
qExpTrend <- exp(predict(exponential.model))
boxplot(testData[c(4,5,6,7,8),], log="y", ylim=c(0.001, 1000), names=testData[1,], main="X Time vs. No. of Qubits", xlab="No. of Qubits", ylab="Time (ms)")
lines(testData[1,firstTrendPoint:22] - testData[1,1] + 1, qExpTrend,lwd=2, col = "red", xlab = "No. of Qubits", ylab = "Time (ms)")
firstTrendPoint <- 10
# Freely varied log base scaling:
modelY <- log(testData[2,firstTrendPoint:22])
modelX <- testData[1,firstTrendPoint:22]
exponential.model <- lm(modelY~modelX)
modelSummary<-summary(exponential.model)
modelSummary
coefs <- coef(exponential.model)
# Load data
testData <- t(read.csv(file="/home/iamu/qrack_benchmarks/qengineocl/incsc.csv", header=TRUE, sep=","))
firstTrendPoint <- 10
# Freely varied log base scaling:
modelY <- log(testData[2,firstTrendPoint:22])
modelX <- testData[1,firstTrendPoint:22]
exponential.model <- lm(modelY~modelX)
modelSummary<-summary(exponential.model)
modelSummary
coefs <- coef(exponential.model)
qExpTrend <- exp(predict(exponential.model))
boxplot(testData[c(4,5,6,7,8),], log="y", ylim=c(0.001, 1000), names=testData[1,], main="X Time vs. No. of Qubits", xlab="No. of Qubits", ylab="Time (ms)")
lines(testData[1,firstTrendPoint:22] - testData[1,1] + 1, qExpTrend,lwd=2, col = "red", xlab = "No. of Qubits", ylab = "Time (ms)")
# Load data
testData <- t(read.csv(file="/home/iamu/qrack_benchmarks/qengineocl/incsc.csv", header=TRUE, sep=","))
firstTrendPoint <- 12
# Freely varied log base scaling:
modelY <- log(testData[2,firstTrendPoint:22])
modelX <- testData[1,firstTrendPoint:22]
exponential.model <- lm(modelY~modelX)
modelSummary<-summary(exponential.model)
modelSummary
coefs <- coef(exponential.model)
qExpTrend <- exp(predict(exponential.model))
boxplot(testData[c(4,5,6,7,8),], log="y", ylim=c(0.001, 1000), names=testData[1,], main="X Time vs. No. of Qubits", xlab="No. of Qubits", ylab="Time (ms)")
lines(testData[1,firstTrendPoint:22] - testData[1,1] + 1, qExpTrend,lwd=2, col = "red", xlab = "No. of Qubits", ylab = "Time (ms)")
firstTrendPoint <- 13
# Freely varied log base scaling:
modelY <- log(testData[2,firstTrendPoint:22])
modelX <- testData[1,firstTrendPoint:22]
exponential.model <- lm(modelY~modelX)
modelSummary<-summary(exponential.model)
modelSummary
qExpTrend <- exp(predict(exponential.model))
boxplot(testData[c(4,5,6,7,8),], log="y", ylim=c(0.001, 1000), names=testData[1,], main="X Time vs. No. of Qubits", xlab="No. of Qubits", ylab="Time (ms)")
lines(testData[1,firstTrendPoint:22] - testData[1,1] + 1, qExpTrend,lwd=2, col = "red", xlab = "No. of Qubits", ylab = "Time (ms)")
# Load data
testData <- t(read.csv(file="/home/iamu/qrack_benchmarks/qenginecpu/inc.csv", header=TRUE, sep=","))
firstTrendPoint <- 13
# Freely varied log base scaling:
modelY <- log(testData[2,firstTrendPoint:22])
# Load data
testData <- t(read.csv(file="/home/iamu/qrack_benchmarks/qenginecpu/inc.csv", header=TRUE, sep=","))
firstTrendPoint <- 13
# Freely varied log base scaling:
modelY <- log(testData[2,firstTrendPoint:22])
modelX <- testData[1,firstTrendPoint:22]
exponential.model <- lm(modelY~modelX)
modelSummary<-summary(exponential.model)
modelSummary
# Load data
testData <- t(read.csv(file="/home/iamu/qrack_benchmarks/qunitcpu/cnot.csv", header=TRUE, sep=","))
firstTrendPoint <- 1
# Freely varied log base scaling:
modelY <- log(testData[2,firstTrendPoint:22])
modelX <- testData[1,firstTrendPoint:22]
exponential.model <- lm(modelY~modelX)
modelSummary<-summary(exponential.model)
modelSummary
firstTrendPoint <- 2
# Freely varied log base scaling:
modelY <- log(testData[2,firstTrendPoint:22])
modelX <- testData[1,firstTrendPoint:22]
exponential.model <- lm(modelY~modelX)
modelSummary<-summary(exponential.model)
modelSummary
firstTrendPoint <- 3
# Freely varied log base scaling:
modelY <- log(testData[2,firstTrendPoint:22])
modelX <- testData[1,firstTrendPoint:22]
exponential.model <- lm(modelY~modelX)
modelSummary<-summary(exponential.model)
modelSummary
coefs <- coef(exponential.model)
firstTrendPoint <- 4
# Freely varied log base scaling:
modelY <- log(testData[2,firstTrendPoint:22])
modelX <- testData[1,firstTrendPoint:22]
exponential.model <- lm(modelY~modelX)
modelSummary<-summary(exponential.model)
modelSummary
firstTrendPoint <- 5
# Freely varied log base scaling:
modelY <- log(testData[2,firstTrendPoint:22])
modelX <- testData[1,firstTrendPoint:22]
exponential.model <- lm(modelY~modelX)
modelSummary<-summary(exponential.model)
modelSummary
firstTrendPoint <- 6
# Freely varied log base scaling:
modelY <- log(testData[2,firstTrendPoint:22])
modelX <- testData[1,firstTrendPoint:22]
exponential.model <- lm(modelY~modelX)
modelSummary<-summary(exponential.model)
modelSummary
coefs <- coef(exponential.model)
# Add to equations table:
eqRow <- data.frame(
MinQubit=(firstTrendPoint + testData[1,1] - 1),
Base=coefs[[2]],
Intercept=(coefs[[1]] / coefs[[2]]),
RSqr=modelSummary$r.squared,
BaseP=modelSummary$coefficients[2,4],
InterceptP=modelSummary$coefficients[1,4],
ModelP=lmp(exponential.model)
)
row.names(eqRow)<-c('CNOT')
eqTable <- rbind(eqTable, eqRow)
qExpTrend <- exp(predict(exponential.model))
boxplot(testData[c(4,5,6,7,8),], log="y", names=testData[1,], main="X Time vs. No. of Qubits", xlab="No. of Qubits", ylab="Time (ms)")
, ylim=c(0.001, 1000)
boxplot(testData[c(4,5,6,7,8),], log="y", ylim=c(0.001, 1000), names=testData[1,], main="X Time vs. No. of Qubits", xlab="No. of Qubits", ylab="Time (ms)")
boxplot(testData[c(4,5,6,7,8),], log="y", ylim=c(0.001, 1000), names=testData[1,], main="CNOT Time vs. No. of Qubits", xlab="No. of Qubits", ylab="Time (ms)")
lines(testData[1,firstTrendPoint:22] - testData[1,1] + 1, qExpTrend,lwd=2, col = "red", xlab = "No. of Qubits", ylab = "Time (ms)")
coords <- locator()
text(x=coords$x, y=coords$y, labels=paste('t â‰ˆ exp[', round(coefs[[2]], 2), '( n - ', -round(coefs[[1]] / coefs[[2]], 2), ')]'))
# Load data
testData <- t(read.csv(file="/home/iamu/qrack_benchmark_dump/cnot_all.csv", header=TRUE, sep=","))
# Load data
testData <- t(read.csv(file="/home/iamu/Github/qrack_benchmark_dump/cnot_all.csv", header=TRUE, sep=","))
# Load data
testData <- t(read.csv(file="/home/Github/qrack_benchmark_dump/cnot_all.csv", header=TRUE, sep=","))
# Load data
testData <- t(read.csv(file="/home/iamu/Github/qrack_benchmark_dump/cnot_all.csv", header=TRUE, sep=","))
# Load data
testData <- t(read.csv(file="/home/iamu/GitHub/qrack_benchmark_dump/cnot_all.csv", header=TRUE, sep=","))
firstTrendPoint <- 6
# Freely varied log base scaling:
modelY <- log(testData[2,firstTrendPoint:22])
View(testData)
# Load data
testData <- read.csv(file="/home/iamu/GitHub/qrack_benchmark_dump/cnot_all.csv", header=TRUE, sep=",")
View(testData)
# Load data
testData <- read.csv(file="/home/iamu/GitHub/qrack_benchmark_dump/cnot_all.csv", header=TRUE, sep=",")
firstTrendPoint <- 6
View(testData)
View(testData)
names(testData)=c("# of Qubits", "Average Time (ms)", "Sample Std. Deviation (ms)", "Fastest (ms)", "1st Quartile (ms)", "Median (ms)", "3rd Quartile (ms)", "Slowest (ms)","Type")
View(testData)
View(testData)
names(testData)=c(N, AvgT, SDT, T0, T1, T2, T3, T4, Type)
names(testData)=c("N", "AvgT", "SDT", "T0", "T1", "T2", "T3", "T4", "Type")
View(testData)
View(testData)
ggplot(testData, aes(x=factor(N), y=AvgT, colour = factor(Type)))  +
geom_boxplot(outlier.size=0, fill = "white", position="identity", alpha=.5)  +
stat_summary(fun.y=median, geom="line", aes(group=factor(Type)), size=2)
require(ggplot2)
ggplot(testData, aes(x=factor(N), y=AvgT, colour = factor(Type)))  +
geom_boxplot(outlier.size=0, fill = "white", position="identity", alpha=.5)  +
stat_summary(fun.y=median, geom="line", aes(group=factor(Type)), size=2)
boxplot(testData[c(4,5,6,7,8),], log="y", ylim=c(0.001, 1000), names=testData[1,], main="CNOT Time vs. No. of Qubits", xlab="No. of Qubits", ylab="Time (ms)")
g<-ggplot(testData, aes(x=factor(N), y=AvgT, colour = factor(Type)))  +
geom_boxplot(outlier.size=0, fill = "white", position="identity", alpha=.5)  +
stat_summary(fun.y=median, geom="line", aes(group=factor(Type)), size=2) + scale_y_log10()
ggplot(testData, aes(x=factor(N), y=AvgT, colour = factor(Type)))  +
geom_boxplot(outlier.size=0, fill = "white", position="identity", alpha=.5)  +
stat_summary(fun.y=median, geom="line", aes(group=factor(Type)), size=2) + scale_y_log10()
ggplot(testData, aes(x=factor(N), y=AvgT, colour = factor(Type)))  +
geom_boxplot(outlier.size=0, fill = "white", position="identity", alpha=.5)  +
stat_summary(fun.y=median, geom="line", aes(group=factor(Type)), size=2) + scale_y_log10() +
ggtitle("CNOT Time (ms) vs. No. of Qubits") + xlab("No. of Qubits") + ylab("Time (ms)")
ggplot(testData, aes(x=factor(N), y=AvgT, colour = factor(Type)))  +
geom_boxplot(outlier.size=0, fill = "white", position="identity", alpha=.5)  +
stat_summary(fun.y=median, geom="line", aes(group=factor(Type)), size=2) + scale_y_log10() +
ggtitle("CNOT Time vs. No. of Qubits") + xlab("No. of Qubits") + ylab("Time (ms)")
